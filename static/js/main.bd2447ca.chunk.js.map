{"version":3,"sources":["Components/Navbar.js","Components/Search.js","Components/Result.js","Components/Results.js","Components/Popup.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","togglemode","htmlFor","defaultProps","Search","handleInput","search","placeholder","onChange","onKeyPress","Result","result","openPopup","imdbID","src","Poster","alt","Title","Results","results","map","Popup","selected","closePopup","Year","imdbRating","Runtime","Director","Plot","App","apiurl","useState","s","state","setState","setmode","document","body","style","backgroundColor","e","target","value","prevState","key","axios","then","data","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd2447ca.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n<div className=\"container-fluid\">\r\n  <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n    </ul>\r\n    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n     </div>\r\n  </div>\r\n</div>\r\n</nav>\r\n  )\r\n}\r\n\r\n    Navbar.propTypes={                                                     /* props Types  */\r\n        title: PropTypes.string\r\n    }\r\n    Navbar.defaultProps={                                                   /* props default */\r\n        title: 'Set Title'\r\n    }\r\n","import React from 'react'\r\n\r\nfunction Search({handleInput,search}) {\r\n    return (\r\n       <section className=\"searchbox-wrap\">\r\n           <input type=\"text\" placeholder=\"Search for a Movie....\" className=\"searchbox\"  onChange={handleInput}\r\n           onKeyPress={search}/>\r\n       </section>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nfunction Result({ result , openPopup }) {\r\n    return (\r\n        <div className=\"result\" onClick={() => openPopup(result.imdbID)}>\r\n            <img src={result.Poster} alt=\"\"/>\r\n            <h3>{result.Title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport Result from './Result';\r\nfunction Results({ results, openPopup  }) {\r\n    return (\r\n        <section className=\"results\">\r\n          {results.map(result =>(\r\n                <Result key={result.imdbID} result={result} openPopup={openPopup}/>\r\n              ))}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\n\r\nfunction Popup({ selected, closePopup }) {\r\n\treturn (\r\n\t\t<section className=\"popup\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<h2>{ selected.Title } <span>({ selected.Year })</span></h2>\r\n\t\t\t\t<p className=\"rating\">Rating: {selected.imdbRating}</p>\r\n\t\t\t\t<strong>RunTime : {selected.Runtime}</strong>\r\n\t\t\t\t<div className=\"plot\">\r\n\t\t\t\t\t<img src={selected.Poster} alt=\" \" />\r\n\t\t\t\t\t<p>Directed by : {selected.Director}</p>\r\n\t\t\t\t\t<p>{selected.Plot}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"close\" onClick={closePopup}>Close</button>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Popup","import Navbar from './Components/Navbar';\nimport Search from './Components/Search';\nimport Results from './Components/Results';\nimport Popup from './Components/Popup'\nimport React, { useState } from 'react';\nimport axios from 'axios';\nfunction App() {\n  const apiurl=\"http://www.omdbapi.com/?apikey=dfe6d885\";\n  // http://www.omdbapi.com/?apikey=dfe6d885                 http://www.omdbapi.com/?i=tt3896198&apikey=70011729\n  const [state, setState] = useState({\n    s: \"\",\n    results: [],\n    selected: {}\n  });\n\n  const search=(e)=>{\n  if(e.key===\"Enter\"){\n    axios(apiurl+\"&s=\"+state.s).then(({ data })=>{\n      let results=data.Search;\n\n      setState(prevState =>{\n        return{ ...prevState,results: results}\n      })\n    });\n  }\n  }\n\n  const handleInput=(e)=> {\n    let s=e.target.value;\n    setState(prevState=>{\n      return{...prevState,s:s}\n    });\n  }\n  \n  const openPopup = id => {\n    axios(apiurl + \"&i=\" + id).then(({ data }) => {\n      let result = data;\n\n      console.log(result);\n\n      setState(prevState => {\n        return { ...prevState, selected: result }\n      });\n    });\n  }\n\n  const closePopup = () => {\n    setState(prevState => {\n      return { ...prevState, selected: {} }\n    });\n  }\n  const [mode, setmode] = useState('light');\n\n  const togglemode= ()=>{\n   if(mode==='dark'){\n    setmode('light');\n    document.body.style.backgroundColor='white';\n   }\n   else{\n     setmode('dark');\n     document.body.style.backgroundColor='#1a0343';\n   }\n  }\n\n\n  return (\n    // <div className={(typeof state.selected.Title !== \"undefined\") ? 'app nobackground':'app background' }>\n    <>    \n   \n      <Navbar title=\"Movies DataBase\" mode={mode} togglemode={togglemode}/>\n     <div className=\"App\">\n       <main>\n         <Search handleInput={handleInput} search={search}/>\n         <Results results={state.results}  openPopup={openPopup}/>\n         {(typeof state.selected.Title !== \"undefined\") ? <Popup selected={state.selected} closePopup={closePopup} /> : false}\n       </main>\n     </div>\n     \n    </>\n  //  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}